#!/bin/bash

require_command jq
require_deployment_dir

could_not_require_concourse_api_target() {
  set +x
  echo "This script requires $1 to exist,"
  echo "  and contain a value for 'ELBRecordSetName'"
  exit 1
}

# Sets $api_target to the URL for the atc
require_concourse_api_target() {
  local concourse_properties_file=$DEPLOYMENT_DIR/cloud_formation/bosh_properties.json

  if [ ! -f ${concourse_properties_file} ]; then
    could_not_require_concourse_api_target ${concourse_properties_file}
  fi

  api_target=`cat ${concourse_properties_file} | jq -r '
    .[] |
    select(.ParameterKey == "ELBRecordSetName") |
    .ParameterValue |
    gsub("\\\\.$"; "")
  '`

  if [ -z "${api_target}" ] || [ "${api_target}" == "null" ]; then
    could_not_require_concourse_api_target ${concourse_properties_file}
  fi
}

could_not_require_concourse_atc_credentials() {
  set +x
  echo "This script requires ${1} to exist,"
  echo "  and contain a values for basic_auth_username and basic_auth_password"
  echo
  echo "  Error: ${2}"
  exit 1
}

# sets ${atc_password} and ${atc_username}
require_concourse_atc_credentials() {

  local atc_credentials_file=${DEPLOYMENT_DIR}/stubs/concourse/atc_credentials.yml
  if [ ! -f ${atc_credentials_file} ]; then
    could_not_require_concourse_atc_credentials ${atc_credentials_file} "${atc_credentials_file} not found"
  fi

  atc_username=`cat ${atc_credentials_file} | yaml2json | jq -r .atc_credentials.basic_auth_username`

  if [ -z "${atc_username}" ] || [ "${atc_username}" == "null" ]; then
    could_not_require_concourse_atc_credentials ${atc_credentials_file} "basic_auth_username not set"
  fi

  atc_password=`cat ${atc_credentials_file} | yaml2json | jq -r .atc_credentials.basic_auth_password`

  if [ -z "${atc_password}" ] || [ "${atc_password}" == "null" ]; then
    could_not_require_concourse_atc_credentials ${atc_credentials_file} "basic_auth_password not set"
  fi
}

require_fly_target() {
  require_command fly
  require_deployment_dir
  require_concourse_api_target
  require_concourse_atc_credentials

  fly save-target cli --api https://${api_target} --username ${atc_username} --password ${atc_password}

  require_fly_target() { : ; } # Rash's dirty memoisation. Makes the function a no-op
}
